point_count = 100000;
seed = 88529482;

source_dir = '../data/shape_sources';
shape_dir = '../data/shapes';

shape_names = {...
    'cube',...
    'fandisk',...
    'bunny',...
    'armadillo',...
    'dragon',...
    'happy',...
    'boxunion'};

% shape_names = {...
%     'cube'};

noise_type = 'white';
min_noise = 0.0;
max_noise = 0.1;
noise_level_count = 11;
    
for s = 1:numel(shape_names)
    shape_name = shape_names{s};
    
    disp(['shape: ',shape_name])
    
    for noise_level=linspace(min_noise,max_noise,noise_level_count)
        
        disp(['    noise level: ',num2str(noise_level)]);

        source_filename = fullfile(source_dir,[shape_name,'.off']);
        shape_filename = fullfile(shape_dir,[shape_name,sprintf('%d',round(point_count/1000)),'k']);
        if exist(shape_filename,'file') == 2
            error(['Shape file ',shape_filename,' already exists, please remove manually for safety.']);
            % regenerating them would maybe mean they get differnt point
            % locations, and ground truth normals, so the current normals
            % generated by our models would need to be re-generated as well
            % (which takes a long time)
        end

        if noise_level == 0
%             CloudFromOFF(source_filename ,point_count,shape_filename);
            CloudFromOFF(source_filename ,point_count,shape_filename,[],[],52435234);
        else
            shape_filename = [shape_filename,'_noise_',noise_type,sprintf('_%.2e',noise_level)]; %#ok<AGROW>
%             CloudFromOFF(source_filename ,point_count,shape_filename,noise_level,noise_type);
            CloudFromOFF(source_filename ,point_count,shape_filename,noise_level,noise_type,52435234);
        end
        disp(['    generated file: ',shape_filename]);
    end
end
